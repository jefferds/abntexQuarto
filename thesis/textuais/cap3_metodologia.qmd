\chapter{Materials and Methods}

This chapter details the methodology for developing a Level 1 digital twin for a laboratory-scale gas turbine. The approach integrates first-principle thermodynamic models with a data-driven framework using Physics-Informed Neural Networks (PINNs). The primary objective is to create a robust and physically consistent model capable of predicting the turbine's performance under various operating conditions. The methodology encompasses several key stages: establishing the mathematical model from fundamental thermodynamic laws, leveraging experimental data for training and validation, implementing the hybrid PINN architecture, and rigorously evaluating the final digital twin's predictive accuracy and physical fidelity. This structured approach ensures that the resulting digital twin is not only accurate but also grounded in the underlying physics of the gas turbine system.

\section{Experimental Setup and Data Acquisition}

The physical asset central to this investigation is the Mini-Lab\texttrademark~Gas Turbine Power System, which is based on the SR-30 turbojet engine. This system is purpose-built for educational and experimental applications, allowing for the simulation and detailed analysis of core gas turbine operations and thermodynamic cycles on a laboratory scale.

\subsection{System Overview and Instrumentation}

The SR-30 engine is configured as a single-shaft turbojet, comprising a centrifugal compressor, an annular combustion chamber, an axial turbine, and a nozzle. To facilitate comprehensive operational monitoring and data acquisition, the engine is extensively instrumented with a variety of sensors. These sensors provide high-resolution, real-time data on critical thermodynamic and performance parameters.

The instrumentation setup includes:
\begin{itemize}
    \item Compressor Inlet Pressure ($\mathrm{P}_{1}$) and Temperature ($\mathrm{T}_{1}$).
    \item Compressor Exit Pressure ($\mathrm{P}_{2}$) and Temperature ($\mathrm{T}_{2}$).
    \item Turbine Inlet Pressure ($\mathrm{P}_{3}$) and Temperature ($\mathrm{T}_{3}$).
    \item Turbine Exit Pressure ($\mathrm{P}_{4}$) and Temperature ($\mathrm{T}_{4}$).
    \item Exhaust Gas Pressure ($\mathrm{P}_{5}$) and Temperature ($\mathrm{T}_{5}$).
    \item Compressor Rotational Speed (RPM), measured by a tachometer generator.
    \item Fuel Pressure and Fuel Flow.
    \item Engine Thrust, measured via a dedicated load cell.
\end{itemize}
These parameters are displayed on the system's control panel and, more extensively, on a connected Data Acquisition Screen. Specifically, $\mathrm{P}_{3}$ and $\mathrm{T}_{3}$ (Turbine Inlet Temperature, displayed as TIT) are available on both the panel and screen, while $\mathrm{T}_{5}$ (Exhaust Gas Temperature, displayed as EGT) is also accessible from both. Fuel Pressure is displayed on the panel. The precise location of these engine sensors is depicted in the SR-30 Gas Turbine Cutaway diagram within the Mini-Lab's operational manual.

\subsection{Data Acquisition System and Control Interface}

The data acquisition process is managed through a dedicated Data Acquisition Computer running the MiniLab 1.1 software. This computer connects to the Mini-Lab system via a USB port, leveraging a National Instruments DAQ (Data Acquisition) system (specifically the NI DAQ 6218 module) for real-time data capture and display. The MiniLab 1.1 software facilitates logging data to file, displaying plot features, and offers controls for unit toggling (e.g., Celsius to Fahrenheit for temperatures, Psig to kPa for pressures, Liters/hour or Gallons/hour for fuel flow, and Newtons to Pounds for thrust). The data sampling rate can be selected between 0.1 and 5 samples per second.

\subsection{Experimental Procedure and Data Collection Protocol}

The experimental procedure involved operating the Mini-Lab gas turbine through its pre-start, start-up, and operational phases, followed by a controlled shutdown. Prior to each run, essential checks were conducted, including verification of fuel properties and ambient barometric pressure. During operation, the MiniLab 1.1 software collected real-time data from various sensors, including temperatures, pressures, fuel flow, RPM, and thrust. This data was logged continuously to a file on the connected computer's hard drive via a USB connection to a National Instruments DAQ system. The software allowed for adjustable sampling rates, and the recorded data was stored in an ASCII format, enabling direct import into spreadsheet programs for subsequent detailed analysis.

<!--  -->
<!--  -->
<!--  -->
\section{First-Principle Thermodynamic Model}

The mathematical model of the gas turbine is built upon fundamental thermodynamic principles, assuming the working fluid (air/gas) behaves as an ideal gas. The model is broken down by component to define the physical constraints of the system.

\subsection{Governing Thermodynamic Equations}

The foundational thermodynamic relationships used in this model are the Ideal Gas Law and the equations for isentropic processes. These are expressed as:

\begin{itemize}
    \item \textbf{Ideal Gas Law}: $P = \rho RT$
    \item \textbf{Isentropic Relations}: $P_1V_1^\gamma = P_2V_2^\gamma$ and $T_1 P_1^{\frac{1-\gamma}{\gamma}} = T_2 P_2^{\frac{1-\gamma}{\gamma}}$
\end{itemize}

These equations form the basis for modeling the state changes of the gas as it passes through the turbine's components.

\subsection{Component-Specific Constraints}

The behavior of each major component of the gas turbine is modeled using steady-state thermodynamic constraints, which impose physical limits on temperatures and pressures.

\begin{itemize}
    \item \textbf{Inlet (Station 1)}: Ambient conditions $T_1$ and $P_1$ are considered measured inputs.
    \item \textbf{Compressor (Stations 1-2)}: The temperature and pressure of the gas increase, so $T_2 > T_1$ and $P_2 > P_1$.
    \item \textbf{Combustor (Stations 2-3)}: Fuel combustion adds energy, leading to a significant temperature increase, while a slight pressure drop occurs. Thus, $T_3 > T_2$ and $P_3 < P_2$.
    \item \textbf{Turbine (Stations 3-4)}: The gas expands and cools to produce work, resulting in a decrease in both temperature and pressure, so $T_4 < T_3$ and $P_4 < P_3$.
    \item \textbf{Nozzle/Exhaust (Stations 4-5)}: The exhaust gas further expands and cools, with pressure decreasing to near-atmospheric levels. This implies $T_5 < T_4$ and $P_5 < P_4$.
\end{itemize}

\section{Physics-Informed Neural Network (PINN) Framework}

To bridge the gap between pure data-driven models and first-principle simulations, this work employs a Physics-Informed Neural Network (PINN).

\subsection{Core Concept}

PINNs are neural networks that embed physical laws directly into their learning process. Instead of solely minimizing the error between model predictions and experimental data, the PINN's loss function also includes terms that penalize violations of the governing physical equations. This ensures that the model's predictions are not only accurate but also physically consistent, even in regions where data may be sparse.

\subsection{PINN Architecture}

The core of the PINN is a Multi-Layer Perceptron (MLP). The network architecture is designed as follows:
\begin{itemize}
    \item \textbf{Inputs}: Key operational parameters that drive the system's state, including Fuel Flow (kg/s), Compressor Speed $N_1$ (RPM), ambient temperature $T_1$ (K), and ambient pressure $P_1$ (Pa).
    \item \textbf{Outputs}: The predicted thermodynamic states at various stations within the turbine ($T_2, P_2, T_3, P_3, T_4, P_4, T_5, P_5$) and key performance metrics like Thrust (N).
\end{itemize}

\subsection{Hybrid Loss Function}

The total loss function for the PINN is a weighted sum of a data-driven loss and a physics-informed loss.

$$
L_{total} = w_{data}L_{data} + w_{physics}L_{physics}
$$

\begin{itemize}
    \item \textbf{Data Loss ($L_{data}$)}: This is a standard supervised learning loss (e.g., Mean Squared Error) that measures the discrepancy between the PINN's predictions and the measured experimental data.
    \item \textbf{Physics Loss ($L_{physics}$)}: This component enforces physical consistency. It is composed of several residual terms, each representing a governing physical law. Key physics losses include:
\end{itemize}
    
\begin{itemize}
    \item \textbf{Compressor Temperature Rise Loss ($L_{T2}$)}: This loss enforces the relationship between temperature and pressure rise across the compressor, considering its isentropic efficiency ($\eta_c$).
    $$
    L_{T2} = \left( \eta_c (T_{2,pred} - T_1) - T_1 \left( \left(\frac{P_{2,pred}}{P_1}\right)^{\frac{\gamma-1}{\gamma}} - 1 \right) \right)^2
    $$

    \item \textbf{Turbine Temperature Drop Loss ($L_{T4}$)}: Similarly, this loss models the temperature drop across the turbine in relation to the pressure drop and the turbine's isentropic efficiency ($\eta_t$).
    $$
    L_{T4} = \left( (T_{3,pred} - T_{4,pred}) - \eta_t T_{3,pred} \left(1 - \left(\frac{P_{4,pred}}{P_{3,pred}}\right)^{\frac{\gamma-1}{\gamma}}\right) \right)^2
    $$
\end{itemize}
Additional physics-based losses, such as those for power balance between the compressor and turbine, combustor energy balance, and thrust generation, are also incorporated to further constrain the model. The mass flow rate of air ($m_a$) can be treated as a learnable parameter or estimated via empirical relations.

\section{Digital Twin Development and Evaluation}

The development of the digital twin follows an iterative process of model refinement, training, and validation.

\subsection{Problem Definition}

For the scope of this thesis, the primary objective is well-defined: "Predict steady-state thrust, combustor outlet temperature ($T_3$), and exhaust gas temperature ($T_5$) based on fuel flow and compressor speed ($N_1$). Concurrently, the model will predict intermediate station variablesâ€”specifically temperatures and pressures ($T_2, P_2, P_3, T_4, P_4, \text{and } P_5$)â€”to ensure thermodynamic consistency through the use of physics-informed loss terms." This focused goal guides the model's design and evaluation.

\subsection{Data Preparation and Preprocessing}

Before training, the experimental data undergoes several preprocessing steps:
\begin{itemize}
    \item \textbf{Cleaning}: Handling missing values and identifying/removing outliers.
    \item \textbf{Unit Conversion}: Ensuring all data is in a consistent SI unit system (e.g., temperatures in Kelvin, pressures in Pascals, fuel flow in kg/s).
    \item \textbf{Normalization}: Scaling numerical features to a common range (e.g., [0, 1] or [-1, 1]) to improve the stability and speed of neural network training.
    \item \textbf{Data Splitting}: Partitioning the dataset into training, validation, and test sets to ensure an unbiased evaluation of the model's performance.
\end{itemize}

\subsection{Training and Validation}

The PINN is trained using optimization algorithms like Adam and L-BFGS, which leverage automatic differentiation to compute the gradients required for the physics-based loss terms. The model's performance is evaluated through a rigorous validation process:
\begin{itemize}
    \item \textbf{Predictive Accuracy}: Assessing the model's accuracy on the test set using metrics like Mean Squared Error or R-squared.
    \item \textbf{Physical Consistency}: Verifying that the model's predictions adhere to the defined physical constraints and thermodynamic laws.
    \item \textbf{Sensitivity Analysis}: Investigating the model's response to variations in input parameters to understand the system's sensitivities.
\end{itemize}
This iterative process of training, evaluation, and refinement continues until a satisfactory level of accuracy and physical consistency is achieved.